{"version":3,"sources":["components/Header/index.js","components/Jumbotron.js","components/MemoryCard/index.js","components/GameContainer/index.js","components/Footer.js","App.js","index.js"],"names":["Header","props","react_default","a","createElement","className","id","color","href","middle","clicks","highest","Jumbotron","MemoryCard","src","input","image","alt","name","onClick","handleClicks","GameContainer","state","guessStatus","notClicked","cards","clicked","shuffledCards","headerColor","shuffleCards","fullCardArray","_this","i","length","j","Math","floor","random","_ref","console","log","setState","clickedCard","newState","Object","objectSpread","indexOf","resetNotClicked","concat","newNotClicked","filter","card","push","_this2","this","components_Header","components_Jumbotron","map","components_MemoryCard","key","Component","Footer","App","components_GameContainer","components_Footer","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.4bb0e7fe.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\n\nfunction Header(props) {\n  return (\n    <nav className=\"navbar navbar-light\" id={props.color}>\n  <div id=\"title\">\n  <a className=\"navbar-brand\" href=\"/index\">Memory Game</a>\n  </div>\n  <div id=\"navbarText\">\n      {props.middle}\n  </div>\n  <div id=\"scores\">\n      Your Score: {props.clicks} | Highest Score: {props.highest}\n  </div>\n</nav>\n  );\n}\n\nexport default Header;\n","import React from \"react\";\n\nfunction Jumbotron() {\n  return (\n    <div className=\"jumbotron jumbotron-fluid\">\n    <div className=\"container\">\n        <h1 className=\"display-4\">Memory Game!</h1>\n        <p className=\"lead\">Click on the images to get points, but don't click on any more than once!</p>\n    </div>\n    </div>\n  );\n}\n\nexport default Jumbotron;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction MemoryCard(props) {\n  return (\n    <img src={props.input.image} alt={props.input.name} onClick= {() => props.handleClicks(props.input)} className=\"img-thumbnail click-card\"/>\n  );\n}\n\nexport default MemoryCard;\n","import React, {Component} from \"react\";\nimport Header from \"../Header/index\";\nimport Jumbotron from \"../Jumbotron\";\nimport cards from \"../../cards.json\";\nimport MemoryCard from \"../MemoryCard/index\";\nimport \"./style.css\";\n\nclass GameContainer extends Component {\n  state = {\n    clicks: 0,\n    highest: 0,\n    guessStatus: \"\",\n    notClicked: cards,\n    clicked: [],\n    shuffledCards: cards,\n    headerColor: \"\"\n  };\n\n  shuffleCards = () => {\n    let fullCardArray = this.state.shuffledCards;\n    for (let i = fullCardArray.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        [fullCardArray[i], fullCardArray[j]] = [fullCardArray[j], fullCardArray[i]];\n    }\n    console.log(fullCardArray);\n    this.setState({shuffledCards: fullCardArray});\n  }\n\n  handleClicks = (clickedCard) => {\n    const newState = { ...this.state };\n    if (newState.notClicked.indexOf(clickedCard) < 0) {\n      newState.headerColor = \"red\";\n      let resetNotClicked = newState.notClicked.concat(newState.clicked);\n      newState.notClicked = resetNotClicked;\n      let resetClicked = [];\n      newState.clicked = resetClicked;\n      if (this.state.highest < this.state.clicks) {\n        newState.highest = this.state.clicks;\n      }\n      newState.clicks = 0;\n      newState.guessStatus = \"You guessed Incorrectly!\";\n      this.setState(newState);\n      this.shuffleCards();\n    } else {\n      newState.headerColor = \"green\";\n      let newNotClicked = this.state.notClicked.filter(card => card.id !== clickedCard.id);\n      newState.notClicked = newNotClicked;\n      newState.clicked = newState.clicked.push(clickedCard);\n      newState.clicks = newState.clicks + 1;\n      newState.guessStatus = \"You guessed correctly!\";\n      this.setState(newState);\n      this.shuffleCards();\n    }\n  };\n\n  render () {\n    return (\n      <div>\n        <div className=\"header\">\n        <Header middle={this.state.guessStatus} clicks={this.state.clicks} highest={this.state.highest} color={this.state.headerColor}/>\n        </div>\n        <div className=\"game-container\">\n          <Jumbotron />\n          <div id=\"click-game\">\n            {this.state.shuffledCards.filter(card => card.id <= 12).map(card => {\n              return <MemoryCard input={card} key={card.id} handleClicks={this.handleClicks}/>\n            })}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default GameContainer;\n","import React from \"react\";\n\nfunction Footer() {\n  return (\n    <div className=\"footer\">\n    <div className=\"container\">\n        <span className=\"text-muted\">This is a footer.</span>\n    </div>\n    </div>\n  );\n}\n\nexport default Footer;\n","import React, {Component} from \"react\";\nimport GameContainer from \"./components/GameContainer/index\";\nimport Footer from \"./components/Footer\";\n\n\nclass App extends Component {\n  render () {\n       return (\n      <div>\n          <GameContainer />\n          <Footer />\n      </div>\n    );\n  }\n}\n\nexport default App;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}